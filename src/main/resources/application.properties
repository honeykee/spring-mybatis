server.port=16110
server.tomcat.max-threads= 1000
server.tomcat.max-connections=1000

#**************************************************************************************************
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#默认的交换机
spring.rabbitmq.template.exchange=honeykee.fanout
spring.rabbitmq.publisher-returns=true
spring.rabbitmq.publisher-confirms=true
#**************************************************************************************************


#session线程池的最大个数，大于这个数全部要被清空
session-pool-size = 10

#websocket地址
#websocket.url=ws://localhost:8088/hisData
websocket.url=ws://localhost:16114/hisData
#websocket.url=ws://localhost:16114/websocket/222222/22222F01

#如果您不喜欢application.properties配置文件名，可以通过指定spring.config.name环境属性切换到另一个文件名。
#spring.config.name=test
my-props.list-prop2[0]=aaa
my-props.list-prop2[1]=bbb

#management.endpoints.web.exposure.include=

#bi
bi.datasource.jdbcUrl= jdbc:mysql://101.132.170.171:3306/bi_2273?useUnicode=true&characterEncoding=utf-8&useSSL=true&autoReconnect=true&connectTimeout=0&socketTimeout=0&allowMultiQueries=true
bi.datasource.username= root
bi.datasource.password= Palmap+2017
bi.datasource.driverClassName= com.mysql.cj.jdbc.Driver
#
#cind.datasource.jdbcUrl=jdbc:postgresql://101.132.117.227:5432/arCode?autoReconnect=true
#cind.datasource.username=cindy
#cind.datasource.password=cindy
#cind.datasource.driverClassName=org.postgresql.Driver



#**************************************************************************************************
# Druid 数据源 1 配置，继承spring.datasource.druid.* 配置，相同则覆盖
spring.datasource.druid.one.name= mysql-171
spring.datasource.druid.one.username=root
#spring.datasource.druid.one.password=Palmap+2017
#远程配置文件
#spring.datasource.druid.one.password=${config.file};
#当前文件配置
spring.datasource.druid.one.password=${password}
spring.datasource.druid.one.url=jdbc:mysql://101.132.170.171:3306/bi_2273?useUnicode=true&characterEncoding=utf-8&useSSL=true&autoReconnect=true&connectTimeout=0&socketTimeout=0&allowMultiQueries=true
spring.datasource.druid.one.driver-class-name= com.mysql.cj.jdbc.Driver
spring.datasource.druid.one.max-active=22
spring.datasource.druid.one.max-wait=10002
spring.datasource.druid.one.initial-size=22
spring.datasource.druid.one.min-idle=22

spring.datasource.druid.one.poolPreparedStatements= true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#有两个含义：
#1) Destroy线程会检测连接的间隔时间
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.druid.one.time-between-eviction-runs-millis= 60002
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.one.min-evictable-idle-time-millis=300002
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.one.validation-query= select 1 from dual
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于
#timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.one.test-while-idle= true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.one.test-on-borrow= false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.one.test-on-return= false

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.druid.one.filters= stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.druid.one.connection-properties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

spring.datasource.druid.one.query-timeout= 5
spring.datasource.druid.one.remove-abandoned-timeout=8
spring.datasource.druid.one.remove-abandoned=true
spring.datasource.druid.one.log-abandoned=true
spring.datasource.druid.one.default-read-only=true
#spring.datasource.his.default-transaction-isolation=0
spring.datasource.druid.one.keep-alive=true
spring.datasource.druid.one.fail-fast=true
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.one.max-open-prepared-statements=92
spring.datasource.druid.one.max-evictable-idle-time-millis=25200002
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.one.pool-prepared-statements=true
spring.datasource.druid.one.max-pool-prepared-statement-per-connection-size=24
spring.datasource.druid.one.use-global-data-source-stat=true

#本地文件方式 1
#config.file=file:///home/admin/druid-pool.properties
#spring.datasource.druid.one.connection-properties= config.file=https://bucket-his.ipalmap.com/tmp/druid-pool.properties;config.decrypt=true;config.decrypt.key=${publickey};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#远程文件方式 2
#config.file=config.file=https://bucket-his.ipalmap.com/tmp/druid-pool.properties
#spring.datasource.druid.one.connection-properties= ${config.file};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#当前文件方式 3
#spring.datasource.druid.one.connection-properties= config.decrypt=true;config.decrypt.key=${publickey};druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#Palmap+2017
publicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJACEpwHX6X+EggdOXA8Fa9mfftYwdOZ60aECGlMiqZJoOJPcGza1+87e00u6owtkdA6TsjK6Or7AvaNQ2qBkocCAwEAAQ==
password=jlu340MUGKfYj2kMDGk35EBZ2kHxsp4dsuuKDLoNw5QeICW2NWLi4o2yf5sH1+PLOS2baBYyLqc0j/BnPlm71Q==
#这两个是都要的
spring.datasource.druid.one.filters= config,mergeStat  # mergeStat 和mergeSql=true效果一致
spring.datasource.druid.one.filter.config.enabled=true

#代替connection-properties
spring.datasource.druid.one.connect-properties.config.decrypt=true
spring.datasource.druid.one.connect-properties.config.decrypt.key=${publickey}
spring.datasource.druid.one.connect-properties.druid.stat.mergeSql=true
#StatFilter属性slowSqlMillis用来配置SQL慢的标准，执行时间超过slowSqlMillis的就是慢。slowSqlMillis的缺省值为3000，也就是3秒。
spring.datasource.druid.one.connect-properties.druid.stat.slowSqlMillis=5000

#spring.datasource.druid.one.connect-properties.config.decrypt = true
#spring.datasource.druid.one.connect-properties.config.decrypt.key = ${publickey}

#spring.datasource.druid.filter.config.enabled=true
#spring.datasource.druid.connect-properties.config.decrypt = true
#spring.datasource.druid.connect-properties.config.decrypt.key = ${publickey}


#**************************************************************************************************
# Druid 数据源 2 配置，继承spring.datasource.druid.* 配置，相同则覆盖
spring.datasource.druid.two.name=postgre-227
spring.datasource.druid.two.username=cindy
spring.datasource.druid.two.password=cindy
spring.datasource.druid.two.url=jdbc:postgresql://101.132.117.227:5432/arCode?autoReconnect=true
spring.datasource.druid.two.driver-class-name= org.postgresql.Driver
spring.datasource.druid.two.max-active=23
spring.datasource.druid.two.max-wait=20003
spring.datasource.druid.two.initial-size=23
spring.datasource.druid.two.min-idle=23

#如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。
spring.datasource.druid.two.poolPreparedStatements= true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#有两个含义：
#1) Destroy线程会检测连接的间隔时间
#2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.druid.two.time-between-eviction-runs-millis= 60003
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.two.min-evictable-idle-time-millis=300003
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.two.validation-query= select 1
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于
#timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.two.test-while-idle= true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.two.test-on-borrow= false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.datasource.druid.two.test-on-return= false

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.druid.one.filters= stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.two.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

spring.datasource.druid.two.query-timeout= 6
spring.datasource.druid.two.remove-abandoned-timeout=9
spring.datasource.druid.two.remove-abandoned=true
spring.datasource.druid.two.log-abandoned=true
spring.datasource.druid.two.default-read-only=true
#spring.datasource.his.default-transaction-isolation=0
spring.datasource.druid.two.keep-alive=true
spring.datasource.druid.two.fail-fast=true
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.two.max-open-prepared-statements=93
spring.datasource.druid.two.max-evictable-idle-time-millis=25200003
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.two.pool-prepared-statements=true
spring.datasource.druid.two.max-pool-prepared-statement-per-connection-=24

#**************************************************************************************************
# 公共的

#spring.datasource.type = com.alibaba.druid.pool.DruidDataSource



# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#是否启用StatFilter默认值false
spring.datasource.druid.web-stat-filter.enabled= true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions= *.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable= false
spring.datasource.druid.web-stat-filter.session-stat-max-count= 1000
spring.datasource.druid.web-stat-filter.principal-session-name=one-session
spring.datasource.druid.web-stat-filter.principal-cookie-name=one-cookie
spring.datasource.druid.web-stat-filter.profile-enable=true

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
spring.datasource.druid.stat-view-servlet.enabled= true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=123456
#spring.datasource.druid.stat-view-servlet.allow= 128.242.127.1/24,128.242.128.1  // 不配置则所有可以访问,24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配。,由于匹配规则不支持IPV6，配置了allow或者deny之后，会导致IPV6无法访问,
#spring.datasource.druid.stat-view-servlet.deny=

spring.datasource.druid.filters=stat,wall,slf4j,config
# Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
# Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
spring.datasource.druid.aop-patterns= com.example.springmybatis.controller.*
#**************************************************************************************************
